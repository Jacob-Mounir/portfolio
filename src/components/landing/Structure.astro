---
// src/components/landing/Structure.astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import projects from "../../data/projects.js";
import quotes from "../../data/quotes";

// Get the base URL for assets
const baseUrl = import.meta.env.BASE_URL;
---

<BaseLayout
  title="Jacob Mounir | Portfolio"
  description="Welcome to my portfolio website"
>
  <section>
    <div class="p-4">
      <div
        class="grid grid-cols-1 gap-4 list-none lg:grid-cols-3 lg:grid-rows-3 xl:grid-cols-4 xl:grid-rows-4"
      >
        <div
          class="lg:row-span-2 ring-1 dark:ring-white/10 ring-primary/5 bg-white/10 dark:bg-secondary backdrop-blur-md shadow-xl dark:shadow-thick rounded-3xl p-8 tilt-card"
        >
          <div class="relative flex items-center gap-x-4">
            <img
              src={`${baseUrl}/images/avatar.jpg`}
              alt=""
              class="h-10 w-10 rounded-full ring-1 dark:ring-white/10 ring-primary/5"
            />
            <div class="text-sm leading-6">
              <p class="font-semibold text-primary dark:text-white">
                <a href="#">
                  <span class="absolute inset-0"></span>
                  Jacob Mounir
                </a>
              </p>
              <p class="text-zinc-500 dark:text-zinc-400">
                UI Design &amp; Web developer
              </p>
            </div>
          </div>
          <p
            class="text-3xl mt-6 font-medium lg:text-4xl tracking-tight text-primary dark:text-white"
          >
            Hey, welcome to my site!
          </p>
          <p
            class="mt-4 text-sm text-[#101010] dark:text-zinc-400 font-light lg:text-xl"
          >
            I'm a guy from Gothenburg that loves design, tech and travel! Here
            you will find things I like and a bit more about me. In the digital
            world, I craft interfaces and dive into coding intricacies.
            <br />
            <br />
            Beyond screens, I find solace and joy riding waves along Malibu's shores.
            My life blends tech and nature, coding sessions, and catching waves.
          </p>
        </div>

        <!--
LINKS -->

        <div
          class="ring-1 dark:ring-white/10 ring-primary/5 rounded-3xl justify-between shadow-xl dark:shadow-thick items-center flex flex-col p-8 h-full bg-white/10 dark:bg-secondary backdrop-blur-md tilt-card"
        >
          <div class="w-full">
            <p
              class="text-xl font-normal tracking-tight text-primary dark:text-white lg:text-8xl"
            >
              Find me on
            </p>
          </div>
          <div
            class="grid mt-4 grid-cols-4 md:grid-cols-4 lg:grid-cols-4 gap-y-4 gap-4 justify-center w-full"
          >
            <a
              href="mailto:jacob@agentsandscouts.com"
              class="flex items-center justify-center aspect-square shadow-xl dark:shadow-thick hover:bg-zinc-100 dark:hover:bg-primary ring-1 bg-zinc-50 dark:ring-white/10 ring-primary/5 dark:bg-tertiary rounded-lg hover:ring-primary/5 dark:hover:ring-white/20 duration-300 group transition-all h-16 w-16"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="icon icon-tabler icon-tabler-mail h-8 w-8 group-hover:scale-125 duration-300 text-primary dark:text-white group-hover text-primary:dark:text-white/50"
                viewBox="0 0 24 24"
                stroke-width="0.8"
                stroke="currentColor"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path
                  d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z"
                ></path>
                <path d="M3 7l9 6l9 -6"></path>
              </svg>
            </a>
            <a
              href="https://github.com/Jacob-Mounir"
              target="_blank"
              rel="noopener noreferrer"
              class="flex items-center justify-center aspect-square shadow-xl dark:shadow-thick hover:bg-zinc-100 dark:hover:bg-primary ring-1 bg-zinc-50 dark:ring-white/10 ring-primary/5 dark:bg-tertiary rounded-lg hover:ring-primary/5 dark:hover:ring-white/20 duration-300 group transition-all h-16 w-16"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="icon icon-tabler icon-tabler-brand-github h-8 w-8 group-hover:scale-125 duration-300 text-primary dark:text-white group-hover text-primary:dark:text-white/50"
                viewBox="0 0 24 24"
                stroke-width="0.8"
                stroke="currentColor"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path
                  d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5"
                ></path>
              </svg>
            </a>
            <a
              href="https://twitter.com/pulsican"
              target="_blank"
              rel="noopener noreferrer"
              class="flex items-center justify-center aspect-square shadow-xl dark:shadow-thick hover:bg-zinc-100 dark:hover:bg-primary ring-1 bg-zinc-50 dark:ring-white/10 ring-primary/5 dark:bg-tertiary rounded-lg hover:ring-primary/5 dark:hover:ring-white/20 duration-300 group transition-all h-16 w-16"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="icon icon-tabler h-8 w-8 group-hover:scale-125 duration-300 text-primary dark:text-white group-hover text-primary:dark:text-white/50 icon-tabler-brand-x"
                viewBox="0 0 24 24"
                stroke-width="0.8"
                stroke="currentColor"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M4 4l11.733 16h4.267l-11.733 -16z"></path>
                <path d="M4 20l6.768 -6.768m2.46 -2.46l6.772 -6.772"></path>
              </svg>
            </a>
            <a
              href="https://www.linkedin.com/in/jacob-mounir/"
              target="_blank"
              rel="noopener noreferrer"
              class="flex items-center justify-center aspect-square shadow-xl dark:shadow-thick hover:bg-zinc-100 dark:hover:bg-primary ring-1 bg-zinc-50 dark:ring-white/10 ring-primary/5 dark:bg-tertiary rounded-lg hover:ring-primary/5 dark:hover:ring-white/20 duration-300 group transition-all h-16 w-16"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="icon icon-tabler h-8 w-8 group-hover:scale-125 duration-300 text-primary dark:text-white group-hover text-primary:dark:text-white/50 icon-tabler-brand-linkedin"
                viewBox="0 0 24 24"
                stroke-width="0.8"
                stroke="currentColor"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path
                  d="M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z"
                ></path>
                <path d="M8 11l0 5"></path>
                <path d="M8 8l0 .01"></path>
                <path d="M12 16l0 -5"></path>
                <path d="M16 16v-3a2 2 0 0 0 -4 0"></path>
              </svg>
            </a>
          </div>
        </div>

        <!--
          PORTFOLIO -->

        <div
          class="ring-1 lg:row-span-2 flex flex-col justify-between group hover:ring-primary/10 dark:hover:ring-white/20 duration-300 h-full dark:ring-white/10 ring-primary/5 lg:row-start-2 md:grid-cols-2 md:grid lg:gap-0 md:items-center md:gap-12 lg:grid-cols-none lg:col-start-2 lg:col-span-2 rounded-3xl p-8 bg-white/10 dark:bg-secondary/10 backdrop-blur-md shadow-xl dark:shadow-thick tilt-card"
        >
          <div class="flex flex-col h-full">
            <!-- Header with navigation -->
            <div class="flex items-center justify-between mb-6">
              <h2
                class="text-5xl font-medium tracking-tight text-primary dark:text-white"
              >
                Projects
              </h2>
              <div class="flex gap-2">
                <button
                  class="prev-project p-2 rounded-full hover:bg-zinc-100/20 dark:hover:bg-tertiary transition-colors duration-200"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-6 w-6 text-primary dark:text-white"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M15 19l-7-7 7-7"></path>
                  </svg>
                </button>
                <button
                  class="next-project p-2 rounded-full hover:bg-zinc-100/20 dark:hover:bg-tertiary transition-colors duration-200"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-6 w-6 text-primary dark:text-white"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 5l7 7-7 7"></path>
                  </svg>
                </button>
              </div>
            </div>

            <!-- Project Display -->
            <div class="project-container flex-grow relative">
              <div class="project-content">
                <h3
                  class="text-2xl font-medium text-primary dark:text-white mb-4 project-title"
                >
                </h3>
                <div
                  class="relative aspect-video mb-4 overflow-hidden rounded-xl"
                >
                  <img
                    class="project-image w-full h-full object-cover transition-transform duration-300 hover:scale-105"
                    src=""
                    alt=""
                  />
                </div>
                <div class="space-y-4">
                  <p
                    class="text-zinc-500 dark:text-zinc-400 project-description"
                  >
                  </p>
                  <div class="flex items-center justify-between">
                    <span
                      class="project-tech text-sm font-medium text-primary dark:text-white px-3 py-1 bg-zinc-100/20 dark:bg-tertiary rounded-full"
                    ></span>
                    <a
                      href="#"
                      class="project-link inline-flex items-center text-sm font-semibold text-primary dark:text-white hover:text-primary/70 dark:hover:text-white/70"
                    >
                      View Project
                      <svg
                        class="ml-2 w-4 h-4"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                      </svg>
                    </a>
                  </div>
                </div>
              </div>
            </div>

            <!-- Progress bar -->
            <div
              class="mt-6 h-1 bg-zinc-100/20 dark:bg-tertiary rounded-full overflow-hidden"
            >
              <div
                class="project-progress h-full bg-primary dark:bg-white transition-all duration-300"
                style="width: 0%"
              >
              </div>
            </div>
          </div>
        </div>

        <!--
      RESUME -->

        <div
          class="ring-1 dark:ring-white/10 ring-primary/5 flex flex-col justify-between items-center rounded-3xl shadow-xl dark:shadow-thick p-8 bg-white/10 dark:bg-secondary/10 backdrop-blur-md overflow-hidden text-center lg:text-left tilt-card"
        >
          <div>
            <p
              class="text-xl text-primary dark:text-white lg:text-7xl tracking-tight"
            >
              Grab my résumé!
            </p>
            <p
              class="mt-4 text-sm text-[#101010] dark:text-zinc-400 md:max-w-xs lg:max-w-none"
            >
              Unlock the doors to explore the rich tapestry of my professional
              journey and accomplishments.
            </p>
          </div>

          <a
            href={`${baseUrl}/CV.pdf`}
            download
            target="_blank"
            class="w-full mt-8 md:max-w-xs lg:max-w-none"
          >
            <button
              type="button"
              class="text-sm py-2 w-full px-4 h-12 font-semibold focus:ring-2 rounded-lg bg-primary dark:bg-white dark:text-primary dark:hover:text-white hover:text-primary dark:hover:bg-white/5 hover:bg-primary/10 text-white flex duration-200 focus:ring-offset-2 focus:ring-inline-flex items-center justify-between"
            >
              Download my CV
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="icon icon-tabler icon-tabler-download w-4 h-4"
                viewBox="0 0 24 24"
                stroke-width="2"
                stroke="currentColor"
                fill="none"
                stroke-linecap="round"
                stroke-linejoin="round"
                ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
                  d="M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2"></path><path
                  d="M7 11l5 5l5 -5"></path><path d="M12 4l0 12"></path></svg
              >
            </button>
          </a>
        </div>

        <!--
                DARKMODE -->

        <div
          class="darkmode-toggle ring-1 dark:ring-white/10 ring-primary/5 shadow-xl dark:shadow-thick rounded-3xl p-8 lg:row-start-3 h-full flex flex-col justify-center items-center bg-white/10 dark:bg-secondary/10 backdrop-blur-md tilt-card"
        >
          <input type="checkbox" id="darkmode-toggle" />
          <label for="darkmode-toggle" class="cursor-pointer">
            <svg class="sun" viewBox="0 0 24 24">
              <path
                d="M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.65 0-3 1.35-3 3s1.35 3 3 3 3-1.35 3-3-1.35-3-3-3zM2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1zm18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1zM11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1zm0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1zM5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41L5.99 4.58zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41l-1.06-1.06zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0l1.06-1.06z"
              ></path>
            </svg>
            <svg class="moon" viewBox="0 0 24 24">
              <path
                d="M9.37,5.51C9.19,6.15,9.1,6.82,9.1,7.5c0,4.08,3.32,7.4,7.4,7.4c0.68,0,1.35-0.09,1.99-0.27C17.45,17.19,14.93,19,12,19 c-3.86,0-7-3.14-7-7C5,9.07,6.81,6.55,9.37,5.51z M12,3c-4.97,0-9,4.03-9,9s4.03,9,9,9s9-4.03,9-9c0-0.46-0.04-0.92-0.1-1.36 c-0.98,1.37-2.58,2.26-4.4,2.26c-2.98,0-5.4-2.42-5.4-5.4c0-1.81,0.89-3.42,2.26-4.4C12.92,3.04,12.46,3,12,3L12,3z"
              ></path>
            </svg>
          </label>

          <div class="mt-6 grid grid-cols-4 gap-3">
            <button
              class="w-8 h-8 rounded-full bg-blue-500 hover:ring-2 ring-offset-2 ring-blue-500 transition-all duration-200"
              data-theme="blue"
              aria-label="Blue theme"></button>
            <button
              class="w-8 h-8 rounded-full bg-green-500 hover:ring-2 ring-offset-2 ring-green-500 transition-all duration-200"
              data-theme="green"
              aria-label="Green theme"></button>
            <button
              class="w-8 h-8 rounded-full bg-purple-500 hover:ring-2 ring-offset-2 ring-purple-500 transition-all duration-200"
              data-theme="purple"
              aria-label="Purple theme"></button>
            <button
              class="w-8 h-8 rounded-full bg-red-500 hover:ring-2 ring-offset-2 ring-red-500 transition-all duration-200"
              data-theme="red"
              aria-label="Red theme"></button>
          </div>

          <script>
            // Get all theme buttons
            const themeButtons = document.querySelectorAll("[data-theme]");

            // Function to update theme colors
            function setThemeColor(color) {
              // Remove any existing theme classes
              document.documentElement.classList.remove(
                "theme-blue",
                "theme-green",
                "theme-purple",
                "theme-red"
              );
              // Add new theme class
              document.documentElement.classList.add(`theme-${color}`);
              // Save preference
              localStorage.setItem("color-theme", color);
            }

            // Add click handlers to buttons
            themeButtons.forEach((button) => {
              button.addEventListener("click", () => {
                const color = (button as HTMLElement).dataset.theme;
                setThemeColor(color);
              });
            });

            // Load saved theme preference
            const savedTheme = localStorage.getItem("color-theme");
            if (savedTheme) {
              setThemeColor(savedTheme);
            }
          </script>
        </div>

        <div
          class="lg:row-span-1 ring-2 dark:ring-white/10 ring-primary/5 hover:ring-primary/5 bg-white/10 dark:bg-secondary dark:hover:ring-white/20 overflow-hidden duration-300 shadow-xl dark:shadow-thick rounded-3xl p-8 tilt-card"
        >
          <div class="grid grid-cols-1 gap-4">
            <!-- NYSE Index -->
            <div
              class="flex flex-row bg-white dark:bg-tertiary shadow-sm rounded-xl p-4"
            >
              <div class="flex flex-col flex-grow">
                <div class="flex items-center justify-between">
                  <span
                    class="inline-block rounded-full text-black dark:text-white ring-2 ring-black dark:ring-white text-xs font-bold px-4 py-1"
                  >
                    NYSE
                  </span>
                  <span class="text-xs text-gray-500 dark:text-gray-400"
                    >Live</span
                  >
                </div>
                <div class="mt-2 flex items-center justify-between">
                  <div
                    class="font-bold text-lg text-primary dark:text-white"
                    data-nyse-price
                  >
                    16,784.22
                  </div>
                  <span class="text-red-500" data-nyse-change>▼ 0.32%</span>
                </div>
              </div>
            </div>

            <!-- Bitcoin Price -->
            <div
              class="flex flex-row bg-white dark:bg-tertiary shadow-sm rounded-xl p-4"
            >
              <div class="flex flex-col flex-grow">
                <div class="flex items-center justify-between">
                  <span
                    class="inline-block rounded-full text-black dark:text-white ring-2 ring-black dark:ring-white text-xs font-bold px-4 py-1"
                  >
                    BTC
                  </span>
                  <span class="text-xs text-gray-500 dark:text-gray-400"
                    >Live</span
                  >
                </div>
                <div class="mt-2 flex items-center justify-between">
                  <div
                    class="font-bold text-lg text-primary dark:text-white"
                    data-btc-price
                  >
                    $42,369.85
                  </div>
                  <span class="text-green-500" data-btc-change>▲ 2.14%</span>
                </div>
              </div>
            </div>

            <!-- Ethereum Price -->
            <div
              class="flex flex-row bg-white dark:bg-tertiary shadow-sm rounded-xl p-4"
            >
              <div class="flex flex-col flex-grow">
                <div class="flex items-center justify-between">
                  <span
                    class="inline-block rounded-full text-black dark:text-white ring-2 ring-black dark:ring-white text-xs font-bold px-4 py-1"
                  >
                    ETH
                  </span>
                  <span class="text-xs text-gray-500 dark:text-gray-400"
                    >Live</span
                  >
                </div>
                <div class="mt-2 flex items-center justify-between">
                  <div
                    class="font-bold text-lg text-primary dark:text-white"
                    data-eth-price
                  >
                    $2,274.32
                  </div>
                  <span class="text-green-500" data-eth-change>▲ 1.87%</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        <script>
          // Function to format numbers with commas
          function formatNumber(num) {
            return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          }

          // Function to update crypto prices
          async function updateCryptoPrices() {
            try {
              const response = await fetch(
                "https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum&vs_currencies=usd&include_24hr_change=true"
              );
              const data = await response.json();

              // Update Bitcoin
              if (data.bitcoin) {
                const btcPrice = document.querySelector("[data-btc-price]");
                const btcChange = document.querySelector("[data-btc-change]");
                if (btcPrice)
                  btcPrice.textContent = `$${formatNumber(data.bitcoin.usd)}`;
                if (btcChange) {
                  const changeValue = data.bitcoin.usd_24h_change.toFixed(2);
                  btcChange.textContent = `${changeValue > 0 ? "▲" : "▼"} ${Math.abs(changeValue)}%`;
                  btcChange.className = `text-${changeValue > 0 ? "green" : "red"}-500`;
                }
              }

              // Update Ethereum
              if (data.ethereum) {
                const ethPrice = document.querySelector("[data-eth-price]");
                const ethChange = document.querySelector("[data-eth-change]");
                if (ethPrice)
                  ethPrice.textContent = `$${formatNumber(data.ethereum.usd)}`;
                if (ethChange) {
                  const changeValue = data.ethereum.usd_24h_change.toFixed(2);
                  ethChange.textContent = `${changeValue > 0 ? "▲" : "▼"} ${Math.abs(changeValue)}%`;
                  ethChange.className = `text-${changeValue > 0 ? "green" : "red"}-500`;
                }
              }
            } catch (error) {
              console.error("Error fetching crypto data:", error);
            }
          }

          // Update prices every minute
          setInterval(updateCryptoPrices, 60000);

          // Initial update
          updateCryptoPrices();
        </script>

        <!-- <div class="mt-8">
              <div class="flex flex-wrap">
                <div
                  class="flex items-center text-sm font-medium text-primary dark:text-white"
                >

                </div>
                <div
                  class="flex items-center ml-6 text-sm font-medium text-primary dark:text-white"
                >

                  <span class="ml-2.5"></span>
                </div>
              </div>
              <p
                class="ext-xl tracking-tight font-medium text-primary dark:text-white md:text-6xl mt-6"
              >

              </p>
              <p class="mt-4 text-sm text-zinc-500 dark:text-zinc-400 font-light">

              </p>
            </div> -->

        <div
          class="ring-1 dark:ring-white/10 ring-primary/5 flex flex-col p-8 h-full justify-center items-center rounded-3xl overflow-hidden relative lg:col-span-3 lg:row-start-4 bg-white/10 dark:bg-secondary/10 backdrop-blur-md shadow-xl dark:shadow-thick tilt-card"
        >
          <div class="relative p-8 text-center w-full">
            <p
              class="text-xl tracking-tight font-medium text-primary dark:text-white md:text-6xl"
            >
              Let's have <span class="lg:block"> a chat?</span>
            </p>
            <form class="mt-6 sm:flex w-full lg:max-w-sm mx-auto">
              <label for="email-address" class="sr-only">Email address</label>
              <input
                type="email"
                name="email-address"
                id="email-address"
                autocomplete="email"
                required=""
                class="block w-full h-12 px-4 py-2 text-sm text-zinc-500 bg-zinc-100 dark:bg-tertiary ring-1 dark:ring-white/10 ring-primary/5 rounded-lg appearance-none focus:ring-white/20 placeholder-zinc-400 focus:border-zinc-300 focus:bg-primary focus:outline-none focus:ring-indigo-500 sm:text-sm"
                placeholder="Enter your email"
              />
              <div class="mt-4 sm:ml-2 sm:mt-0 sm:flex-shrink-0">
                <button
                  type="submit"
                  class="text-sm py-2 w-full px-4 h-12 font-semibold focus:ring-2 rounded-lg bg-primary dark:bg-white dark:text-primary dark:hover:text-white hover:text-primary dark:hover:bg-white/5 hover:bg-primary/10 text-white flex duration-200 focus:ring-offset-2 focus:ring-inline-flex items-center justify-between"
                  >Say Hello 👋
                </button>
              </div>
            </form>
          </div>
        </div>

        <div
          class="ring-1 dark:ring-white/10 ring-primary/5 shadow-xl dark:shadow-thick rounded-3xl p-8 bg-white/10 dark:bg-secondary/10 backdrop-blur-md tilt-card"
        >
          <div class="flex flex-col">
            <div class="flex items-center justify-between mb-4">
              <h2 class="text-2xl font-bold text-primary dark:text-white">
                Daily Wisdom
              </h2>
              <button
                id="refresh-quote"
                class="p-2 rounded-full hover:bg-zinc-100 dark:hover:bg-tertiary transition-colors duration-200"
                aria-label="Get new quote"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5 text-primary dark:text-white"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                  ></path>
                </svg>
              </button>
            </div>

            <blockquote
              id="quote-text"
              class="text-xl font-medium text-primary dark:text-white italic mb-4"
            >
              Loading quote...
            </blockquote>

            <cite
              id="quote-author"
              class="text-sm text-zinc-600 dark:text-zinc-400"></cite>
          </div>

          <script>
            // Import quotes in the client-side script
            const quotes = JSON.parse(
              document
                .getElementById("quotes-data")
                ?.getAttribute("data-quotes") || "[]"
            );
            const quoteText = document.getElementById("quote-text");
            const quoteAuthor = document.getElementById("quote-author");
            const refreshButton = document.getElementById("refresh-quote");

            async function fetchQuote() {
              try {
                if (quoteText && quoteAuthor) {
                  quoteText.style.opacity = "0";
                  quoteAuthor.style.opacity = "0";

                  setTimeout(() => {
                    const randomQuote =
                      quotes[Math.floor(Math.random() * quotes.length)];

                    quoteText.textContent = `"${randomQuote.content}"`;
                    quoteAuthor.textContent = `— ${randomQuote.author}`;

                    quoteText.style.opacity = "1";
                    quoteAuthor.style.opacity = "1";
                  }, 300);
                }
              } catch (error) {
                console.error("Error displaying quote:", error);
                quoteText.textContent =
                  "Could not load quote. Please try again.";
                quoteAuthor.textContent = "";
              }
            }

            // Fetch initial quote
            fetchQuote();

            // Add click event listener to refresh button
            if (refreshButton) {
              refreshButton.addEventListener("click", fetchQuote);
            }
          </script>

          <!-- Add this hidden element to pass quotes data to client-side JavaScript -->
          <div
            id="quotes-data"
            data-quotes={JSON.stringify(quotes)}
            style="display: none;"
          >
          </div>

          <style>
            #quote-text,
            #quote-author {
              transition: opacity 0.3s ease-in-out;
            }
          </style>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<script is:inline>
  // Wait for VanillaTilt to be available
  document.addEventListener("DOMContentLoaded", () => {
    if (typeof VanillaTilt !== "undefined") {
      VanillaTilt.init(document.querySelectorAll(".tilt-card"), {
        max: 5,
        speed: 400,
        glare: true,
        "max-glare": 0.2,
        scale: 1.02,
      });
    }
  });
</script>
